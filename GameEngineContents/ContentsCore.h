#pragma once
#include <GameEngineCore/CoreMinimal.h>
#include <GameEngineCore/GameEngineCore.h>

#include <GameEngineBase/GameEngineSound.h>

// 설명 : 프로그램 자체를 시작하게 한다.
class ContentsCore : public GameEngineCore
{
public:
	// constrcuter destructer
	ContentsCore(); 
	~ContentsCore(); 
	
	// delete Function
	ContentsCore(const ContentsCore& _Other) = delete;
	ContentsCore(ContentsCore&& _Other) noexcept = delete;
	ContentsCore& operator=(const ContentsCore& _Other) = delete;
	ContentsCore& operator=(ContentsCore&& _Other) noexcept = delete;

	// float4 StartWindowSize() override { return float4{ 1920.0f, 1080.0f } * 0.6f; } ;

	float4 StartWindowSize() override { return float4{ 1280, 720.0f }; };
	float4 StartWindowPosition() override { return { 0,0 }; };

	std::string GetWindowTitle() override
	{
		return "DeathDoor";
	}

	static float ReturnFloatLerp(float _fSrc, float _fDst, float _fRatio)
	{
		return _fSrc * (1 - _fRatio) + _fDst * _fRatio;
	}

protected:
	void Start() override;

	// 이 프로그램이 어느 상황에서건 계속 Update하면서 체크할일이 있다면 여기서 한다.
	// 서버가 붙지 않으면 그럴일은 없다. 게임이 무슨 레벨이건 뭐건 무슨키를 누르면 종료한다.
	// 타이틀을 넘기거나 이런
	void Update(float _DeltaTime) override;

	void End() override;

private:
	static void InitializeContentsResource();
	static void DestroyContentsResource();

	void ChangeLevelNumber();

public:

protected:

private:
	static int m_nCurrentLevel;
	static int m_nNextLevel;
	std::weak_ptr<class ContentsLevel> m_wptrCurrentLevel;
	class GameEngineSoundPlayer mstructSoundPlayer;

};

